=head1 NAME

Test::Mock::LWP::Conditional - A module that ...

=head1 SYNOPSIS

    use LWP::UserAgent;
    use HTTP::Response;

    use Test::More
    use Test::Mock::LWP::Conditional;

    my $uri = 'http://example.com/';

    # global
    Test::Mock::LWP::Conditional->stub_request($uri => HTTP::Response->new(503));
    is LWP::UserAgent->new->get($uri)->code => 503;

    # lexical
    my $ua = LWP::UserAgent->new;
    $ua->stub_request($uri => sub { HTTP::Response->new(500) });
    is $ua->get($uri)->code => 500;
    is LWP::UserAgent->new->get($uri)->code => 503;

    # reset
    Test::Mock::LWP::Conditional->reset_all;
    is $ua->get($uri)->code => 200;
    is LWP::UserAgent->new->get($uri)->code => 200;

=head1 DESCRIPTION

This module stubs out LWP::UserAgent's request.

=head1 METHODS

=over 4

=item * stub_request($uri, $res)

Sets stub response for requesed URI.

=item * reset_all

Clear all stub requests.

=back

=head1 AUTHOR

NAKAGAWA Masaki E<lt>masaki@cpan.orgE<gt>

=head1 LICENSE

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=head1 SEE ALSO

L<Test::Mock::LWP>, L<Test::Mock::LWP::Dispatch>, L<Test::MockHTTP>, L<Test::LWP::MockSocket::http>

L<LWP::UserAgent>


=cut

